### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String
  user: User
}

type Comment {
  User: User
  content: String
  createdAt: DateTime
  id: Int
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Film {
  added: DateTime
  cast: JSONObject!
  categories: String
  comments: [Comment]
  country: JSONObject!
  description: String
  directors: JSONObject!
  geners: JSONObject!
  id: Int
  img: String
  itemTitle: String
  kino: JSONObject!
  miniImg: String
  more: String
  ratingIMDb: String
  ratingKinopoisk: String
  releaseYear: Int
  title: String
  trailer: String
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  createComment(content: String!, id: Int!): Comment
  createProfile(avatar: String, info: String, subscribeType: String): Profile
  login(email: String!, password: String!): AuthPayload
  signup(email: String!, name: String, password: String!): AuthPayload
  updateProfile(avatar: String, id: Int, info: String): Profile
}

type Profile {
  avatar: String
  id: Int
  info: String
  subscribeType: String
}

type Query {
  film(id: Int): Film
  films: [Film]
  me: User
}

type User {
  Profile: Profile
  comments: Comment
  email: String!
  id: Int!
  name: String
}

type ViewedFilms {
  content: String
  id: Int
}
